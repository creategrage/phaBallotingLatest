@using phaBalloting.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<div class="container-login100" style="">
    <div class="wrap-login100">
        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "login100-form validate-form", role = "form" }))
        {
        @Html.AntiForgeryToken()
        <form class="login100-form validate-form">
            <span class="login100-form-logo">
                <img src="~/Content/images/PHA_logo.png" style="    width: 98px;" />
            </span>

            <span class="login100-form-title p-b-34 p-t-27">
                Log in
            </span>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="wrap-input100 validate-input" data-validate="Enter username">
                @Html.TextBoxFor(m => m.Email, new { @class = "input100", placeholder = "Username" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>

            <div class="wrap-input100 validate-input" data-validate="Enter password">
                @Html.PasswordFor(m => m.Password, new { @class = "input100", placeholder = "Password" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>

            <div class="contact100-form-checkbox">
                @Html.CheckBoxFor(m => m.RememberMe,new { @class="input-checkbox100", id="ckb1" })
                <label class="label-checkbox100" for="ckb1">
                    Remember me
                </label>
            </div>

            <div class="container-login100-form-btn">
                <button class="login100-form-btn" type="submit">
                    Login
                </button>
            </div>


        </form>
        }    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}